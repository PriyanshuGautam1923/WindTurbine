let labels = [];
let labels2 = [];
let data2;
let config2;
let slice;
let myChart2 = 0;
const input_number = document.getElementById("datapoints");
const btnPlot = document.getElementsByClassName("plot")[0];
const x = [
  1.6, 1.6, 1.6, 1.6, 1.6, 3.2, 3.2, 3.2, 3.2, 3.2, 3.2, 3.2, 4.8, 4.8, 4.8,
  4.8, 4.8, 3.2, 4.8, 4.8, 4.8, 4.8, 6.4, 0.0, 6.4, 3.2, 3.2, 3.2, 3.2, 4.8,
  1.6, 1.6, 1.6, 1.6, 3.2, 6.4, 6.4, 4.8, 1.6, 0.0, 0.0, 0.0, 0.0, 0.0, 1.6,
  0.0, 1.6, 0.0, 1.6, 0.0, 1.6, 1.6, 1.6, 1.6, 1.6, 1.6, 3.2, 1.6, 3.2, 3.2,
  3.2, 3.2, 1.6, 3.2, 3.2, 4.8, 4.8, 3.2, 4.8, 6.4, 6.4, 6.4, 4.8, 4.8, 3.2,
  6.4, 6.4, 9.7, 11.3, 6.4, 6.4, 6.4, 3.2, 4.8, 4.8, 4.8, 3.2, 3.2, 3.2, 1.6,
  1.6, 3.2, 3.2, 3.2, 4.8, 3.2, 4.8, 3.2, 1.6, 1.6, 3.2, 0.0, 0.0, 0.0, 0.0,
  1.6, 0.0, 1.6, 1.6, 1.6, 1.6, 1.6, 1.6, 3.2, 3.2, 3.2, 4.8, 4.8, 3.2, 3.2,
  3.2, 3.2, 3.2, 6.4, 4.8, 3.2, 4.8, 6.4, 3.2, 3.2, 4.8, 3.2, 4.8, 4.8, 4.8,
  4.8, 4.8, 4.8, 4.8, 4.8, 4.8, 4.8, 4.8, 6.4, 8.0, 8.0, 6.4, 6.4, 4.8, 4.8,
  6.4, 6.4, 3.2, 1.6, 1.6, 1.6, 1.6, 3.2, 3.2, 3.2, 4.8, 3.2, 3.2, 3.2, 3.2,
  3.2, 3.2, 3.2, 4.8, 4.8, 4.8, 6.4, 6.4, 4.8, 4.8, 4.8, 4.8, 4.8, 4.8, 6.4,
  8.0, 8.0, 6.4, 6.4, 6.4, 6.4, 4.8, 4.8, 4.8, 6.4, 8.0, 8.0, 6.4, 8.0, 6.4,
  3.2, 4.8, 6.4, 6.4, 3.2, 0.0, 1.6, 3.2, 3.2, 3.2, 3.2, 4.8, 6.4, 3.2, 6.4,
  4.8, 3.2, 3.2, 3.2, 3.2, 3.2, 4.8, 3.2, 3.2, 4.8, 14.5, 4.8, 3.2, 3.2, 4.8,
  6.4, 9.7, 8.0, 4.8, 6.4, 8.0, 4.8, 3.2, 1.6, 1.6, 1.6, 1.6, 1.6, 3.2, 4.8,
  3.2, 4.8, 4.8, 4.8, 4.8, 3.2, 3.2, 1.6, 4.8, 1.6, 1.6, 0.0, 1.6, 1.6, 0.0,
  1.6, 1.6, 1.6, 1.6, 4.8, 6.4, 3.2, 3.2, 3.2, 4.8, 3.2, 16.1, 4.8, 1.6, 1.6,
  0.0, 1.6, 1.6, 0.0, 1.6, 1.6, 1.6, 1.6, 1.6, 1.6, 3.2, 3.2, 3.2, 1.6, 3.2,
  3.2, 3.2, 4.8, 3.2, 3.2, 3.2, 3.2, 3.2, 3.2, 3.2, 4.8, 3.2, 4.8, 4.8, 6.4,
  6.4, 4.8, 6.4, 4.8, 4.8, 6.4, 4.8, 6.4, 8.0, 6.4, 4.8, 3.2, 4.8, 1.6, 4.8,
  3.2, 1.6, 3.2, 1.6, 3.2, 1.6, 3.2, 1.6, 0.0, 0.0, 1.6, 1.6, 1.6, 1.6, 0.0,
  1.6, 0.0, 0.0, 0.0, 1.6, 1.6, 0.0, 0.0, 1.6, 1.6, 1.6, 0.0, 1.6, 0.0, 1.6,
  3.2, 1.6, 3.2, 1.6, 1.6, 3.2, 3.2, 4.8, 6.4, 6.4, 4.8, 4.8, 8.0, 8.0, 8.0,
  8.0, 11.3, 12.9, 8.0, 6.4, 1.6, 8.0, 6.4, 3.2, 3.2, 6.4, 8.0, 6.4, 4.8, 1.6,
  6.4, 6.4, 6.4, 4.8, 4.8, 4.8, 3.2, 0.0, 1.6, 3.2, 0.0, 0.0, 0.0, 0.0, 3.2,
  1.6, 1.6, 1.6, 1.6, 1.6, 1.6, 3.2, 3.2, 3.2, 6.4, 3.2, 6.4, 6.4, 3.2, 4.8,
  6.4, 6.4, 4.8, 6.4, 1.6, 4.8, 3.2, 3.2, 1.6, 3.2, 1.6, 1.6, 1.6, 1.6, 4.8,
  6.4, 3.2, 1.6, 1.6, 1.6, 1.6, 1.6, 0.0, 1.6, 1.6, 1.6, 1.6, 3.2, 1.6, 1.6,
  1.6, 3.2, 3.2, 3.2, 3.2, 6.4, 6.4, 4.8, 4.8, 4.8, 4.8, 8.0, 8.0, 9.7, 6.4,
  6.4, 4.8, 8.0, 4.8, 4.8, 3.2, 3.2, 3.2, 3.2, 3.2, 3.2, 0.0, 3.2, 1.6, 1.6,
  1.6, 4.8, 6.4, 8.0, 4.8, 4.8, 3.2, 4.8, 6.4, 6.4, 6.4, 9.7, 8.0, 6.4, 8.0,
  9.7, 8.0, 9.7, 8.0, 6.4, 8.0, 9.7, 9.7, 9.7, 11.3, 11.3, 9.7, 12.9, 9.7, 9.7,
  12.9, 12.9, 12.9, 12.9, 14.5, 9.7, 12.9, 11.3, 9.7, 11.3, 9.7, 8.0, 11.3, 8.0,
  8.0, 4.8, 4.8, 3.2, 4.8, 4.8, 4.8, 4.8, 3.2, 1.6, 3.2, 4.8, 4.8, 3.2, 3.2,
  3.2, 3.2, 4.8, 3.2, 4.8, 4.8, 4.8, 4.8, 3.2, 3.2, 4.8, 4.8, 3.2, 3.2, 4.8,
  3.2, 4.8, 4.8, 6.4, 6.4, 6.4, 8.0, 8.0, 6.4, 6.4, 8.0, 8.0, 6.4, 8.0, 6.4,
  6.4, 4.8, 4.8, 4.8, 3.2, 1.6, 3.2, 1.6, 1.6, 1.6, 1.6, 1.6, 3.2, 3.2, 1.6,
  1.6, 4.8, 1.6, 1.6, 3.2, 3.2, 4.8, 4.8, 3.2, 3.2, 3.2, 3.2, 3.2, 1.6, 3.2,
  3.2, 3.2, 1.6, 1.6, 1.6, 1.6, 1.6, 3.2, 3.2, 3.2, 4.8, 3.2, 4.8, 4.8, 3.2,
  8.0, 8.0, 9.7, 9.7, 8.0, 6.4, 1.6, 1.6, 1.6, 1.6, 6.4, 6.4, 6.4, 6.4, 6.4,
  4.8, 4.8, 3.2, 3.2, 4.8, 4.8, 4.8, 4.8, 4.8, 3.2, 1.6, 1.6, 1.6, 1.6, 1.6,
  3.2, 3.2, 3.2, 3.2, 3.2, 3.2, 1.6, 3.2, 1.6, 4.8, 3.2, 3.2, 3.2, 3.2, 4.8,
  4.8, 6.4, 6.4, 4.8, 4.8, 4.8, 4.8, 4.8, 3.2, 3.2, 1.6, 1.6, 1.6, 3.2, 3.2,
  3.2, 1.6, 1.6, 1.6, 3.2, 1.6, 1.6, 1.6, 3.2, 1.6, 1.6, 3.2, 3.2, 6.4, 3.2,
  3.2, 3.2, 3.2, 1.6, 3.2, 3.2, 3.2, 3.2, 3.2, 6.4, 6.4, 4.8, 4.8, 4.8, 6.4,
  8.0, 9.7, 8.0, 6.4, 6.4, 6.4, 6.4, 6.4, 4.8, 4.8, 4.8, 3.2, 1.6, 1.6, 0.0,
  0.0, 0.0, 0.0, 1.6, 1.6, 3.2, 3.2, 3.2, 3.2, 4.8, 3.2, 3.2, 3.2, 1.6, 1.6,
  3.2, 1.6, 1.6, 4.8, 4.8, 4.8, 6.4, 6.4, 4.8, 4.8, 4.8, 4.8, 3.2, 4.8, 6.4,
  6.4, 6.4, 6.4, 8.0, 4.8, 6.4, 4.8, 4.8, 6.4, 3.2, 3.2, 3.2, 3.2, 1.6, 1.6,
  1.6, 1.6, 1.6, 3.2, 1.6, 1.6, 1.6, 1.6, 1.6, 3.2, 3.2, 4.8, 4.8, 4.8, 4.8,
  3.2, 4.8, 4.8, 6.4, 4.8, 3.2, 4.8, 6.4, 4.8, 6.4, 6.4, 4.8, 4.8, 4.8, 4.8,
  6.4, 4.8, 6.4, 4.8, 9.7, 8.0, 9.7, 11.3, 9.7, 9.7, 8.0, 9.7, 8.0, 6.4, 9.7,
  4.8, 4.8, 3.2, 3.2, 3.2, 3.2, 3.2, 3.2, 3.2, 3.2, 3.2, 1.6, 1.6, 3.2, 3.2,
  3.2, 1.6, 1.6, 3.2, 3.2, 3.2, 3.2, 3.2, 6.4, 6.4, 6.4, 6.4, 4.8, 3.2, 3.2,
  4.8, 6.4, 8.0, 8.0, 11.3, 8.0, 8.0, 9.7, 6.4, 9.7, 9.7, 6.4, 6.4, 6.4, 6.4,
  6.4, 6.4, 4.8, 3.2, 3.2, 1.6, 1.6, 1.6, 0.0, 0.0, 1.6, 0.0, 1.6, 3.2, 3.2,
  3.2, 3.2, 3.2, 4.8, 3.2, 3.2, 3.2, 3.2, 3.2, 4.8, 4.8, 4.8, 4.8, 6.4, 6.4,
  6.4, 4.8, 4.8, 6.4, 6.4, 9.7, 9.7, 11.3, 9.7, 8.0, 11.3, 11.3, 6.4, 6.4, 6.4,
  6.4, 6.4, 6.4, 4.8, 4.8, 4.8, 3.2, 4.8, 4.8, 1.6, 3.2, 4.8, 4.8, 3.2, 3.2,
  4.8, 6.4, 6.4, 4.8, 4.8, 4.8, 4.8, 3.2, 4.8, 3.2, 1.6, 1.6, 4.8, 4.8, 4.8,
  6.4, 4.8, 4.8, 4.8, 3.2, 6.4, 4.8, 4.8, 4.8, 8.0, 11.3, 11.3, 9.7, 9.7, 8.0,
  11.3, 6.4, 6.4, 6.4, 4.8, 8.0, 9.7, 8.0, 4.8, 3.2, 3.2, 1.6, 3.2, 3.2, 3.2,
  1.6, 3.2, 3.2, 4.8, 8.0, 8.0, 9.7, 8.0, 6.4, 6.4, 6.4, 8.0, 9.7, 8.0, 8.0,
  9.7, 9.7, 9.7, 8.0, 9.7, 8.0, 4.8, 4.8, 4.8, 8.0, 8.0, 9.7, 9.7, 9.7, 8.0,
  6.4, 6.4, 4.8, 4.8, 4.8, 6.4, 4.8, 3.2, 1.6, 1.6, 3.2, 0.0, 1.6, 1.6, 1.6,
  1.6, 1.6, 0.0, 0.0, 3.2, 3.2, 3.2, 3.2, 3.2, 3.2, 3.2, 3.2, 4.8, 6.4, 6.4,
  6.4, 6.4, 4.8, 6.4, 6.4, 6.4, 4.8, 3.2, 3.2, 6.4, 8.0, 8.0, 9.7, 8.0, 9.7,
  8.0, 4.8, 8.0, 11.3, 9.7, 8.0, 8.0, 6.4, 4.8, 4.8, 3.2, 3.2, 3.2, 4.8, 4.8,
  9.7, 12.9, 11.3, 11.3, 6.4, 3.2, 1.6, 4.8, 3.2, 3.2, 3.2, 1.6, 1.6, 4.8, 4.8,
  4.8, 3.2, 4.8, 6.4, 3.2, 4.8, 3.2, 3.2, 0.0, 1.6, 1.6, 0.0, 3.2, 1.6, 1.6,
  1.6, 1.6, 1.6, 4.8, 8.0, 8.0, 6.4, 4.8, 4.8, 4.8, 4.8, 6.4, 4.8, 4.8, 4.8,
  1.6, 3.2, 3.2, 3.2, 4.8, 6.4, 4.8, 3.2, 3.2, 3.2, 3.2, 3.2, 3.2, 3.2, 4.8,
  3.2, 3.2, 4.8, 4.8, 3.2, 3.2, 3.2, 3.2, 3.2, 3.2, 3.2, 3.2, 3.2, 3.2, 3.2,
  4.8, 4.8, 3.2, 9.7, 6.4, 6.4, 8.0, 6.4, 4.8, 4.8, 4.8, 3.2, 6.4, 3.2, 4.8,
  1.6, 3.2, 3.2, 3.2, 1.6, 1.6, 3.2, 3.2, 3.2, 1.6, 0.0, 0.0, 1.6, 1.6, 1.6,
  1.6, 1.6, 1.6, 3.2, 4.8, 4.8, 4.8, 3.2, 4.8, 4.8, 4.8, 8.0, 8.0, 6.4, 9.7,
  6.4, 6.4, 6.4, 4.8, 4.8, 6.4, 6.4, 6.4, 8.0, 8.0, 8.0, 9.7, 8.0, 9.7, 8.0,
  9.7, 8.0, 6.4, 4.8, 4.8, 6.4, 6.4, 4.8, 4.8, 3.2, 4.8, 4.8, 4.8, 4.8, 4.8,
  8.0, 8.0, 8.0, 4.8, 8.0, 8.0, 4.8, 6.4, 8.0, 8.0, 8.0, 9.7, 11.3, 9.7, 9.7,
  9.7, 9.7, 11.3, 9.7, 11.3, 11.3, 9.7, 9.7, 12.9, 9.7, 11.3, 8.0, 9.7, 9.7,
  11.3, 9.7, 9.7, 9.7, 9.7, 6.4, 8.0, 6.4, 6.4, 6.4, 4.8, 3.2, 4.8, 3.2, 4.8,
  6.4, 6.4, 3.2, 4.8, 6.4, 6.4, 4.8, 6.4, 3.2, 3.2, 4.8, 8.0, 9.7, 9.7, 8.0,
  8.0, 6.4, 8.0, 6.4, 4.8, 6.4, 6.4, 9.7, 6.4, 6.4, 3.2, 3.2, 3.2, 3.2, 6.4,
  4.8, 4.8, 6.4, 4.8, 4.8, 6.4, 4.8, 4.8, 4.8, 4.8, 3.2, 3.2, 3.2, 3.2, 3.2,
  1.6, 3.2, 3.2, 4.8, 6.4, 8.0, 6.4, 3.2, 1.6, 1.6, 1.6, 0.0, 3.2, 1.6, 3.2,
  3.2, 4.8, 8.0, 8.0, 9.7, 8.0, 6.4, 6.4, 6.4, 8.0, 9.7, 8.0, 8.0, 9.7, 9.7,
  9.7, 8.0, 9.7, 8.0, 4.8, 4.8, 4.8, 8.0, 8.0, 9.7, 9.7, 9.7, 8.0, 6.4, 6.4,
  4.8, 4.8, 4.8, 6.4, 4.8, 3.2, 1.6, 1.6, 3.2, 0.0, 1.6, 1.6, 1.6, 1.6, 1.6,
  0.0, 0.0, 3.2, 3.2, 3.2, 3.2, 3.2, 3.2, 3.2, 3.2, 4.8, 6.4, 6.4, 6.4, 6.4,
  4.8, 6.4, 6.4, 6.4, 4.8, 3.2, 3.2, 6.4, 8.0, 8.0, 9.7, 8.0, 9.7, 8.0, 4.8,
  8.0, 11.3, 9.7, 8.0, 8.0, 6.4, 4.8, 4.8, 3.2, 3.2, 3.2, 4.8, 4.8, 9.7, 12.9,
  11.3, 11.3, 6.4, 3.2, 1.6, 4.8, 3.2, 3.2, 3.2, 1.6, 1.6, 4.8, 4.8, 4.8, 3.2,
  4.8, 6.4, 3.2, 4.8, 3.2, 3.2, 0.0, 1.6, 1.6, 0.0, 3.2, 1.6, 1.6, 1.6, 1.6,
  1.6, 4.8, 8.0, 8.0, 6.4, 4.8, 4.8, 4.8, 4.8, 6.4, 4.8, 4.8, 4.8, 1.6, 3.2,
  3.2, 3.2, 4.8, 6.4, 4.8, 3.2, 3.2, 3.2, 3.2, 3.2, 3.2, 3.2, 4.8, 3.2, 3.2,
  4.8, 4.8, 3.2, 3.2, 3.2, 3.2, 3.2, 3.2, 3.2, 3.2, 3.2, 3.2, 3.2, 4.8, 4.8,
  3.2, 9.7, 6.4, 6.4, 8.0, 6.4, 4.8, 4.8, 4.8, 3.2, 6.4, 3.2, 4.8, 1.6, 3.2,
  3.2, 3.2, 1.6, 1.6, 3.2, 3.2, 3.2, 1.6, 0.0, 0.0, 1.6, 1.6, 1.6, 1.6, 1.6,
  1.6, 3.2, 4.8, 4.8, 4.8, 3.2, 4.8, 4.8, 4.8, 8.0, 8.0, 6.4, 9.7, 6.4, 6.4,
  6.4, 4.8, 4.8, 6.4, 6.4, 6.4, 8.0, 8.0, 8.0, 9.7, 8.0, 9.7, 8.0, 9.7, 8.0,
  6.4, 4.8, 4.8, 6.4, 6.4, 4.8, 4.8, 3.2, 4.8, 4.8, 4.8, 4.8, 4.8, 8.0, 8.0,
  8.0, 4.8, 8.0, 8.0, 4.8, 6.4, 8.0, 8.0, 8.0, 9.7, 11.3, 9.7, 9.7, 9.7, 9.7,
  11.3, 9.7, 11.3, 11.3, 9.7, 9.7, 12.9, 9.7, 11.3, 8.0, 9.7, 9.7, 11.3, 9.7,
  9.7, 9.7, 9.7, 6.4, 8.0, 6.4, 6.4, 6.4, 4.8, 3.2, 4.8, 3.2, 4.8, 6.4, 6.4,
  3.2, 4.8, 6.4, 6.4, 4.8, 6.4, 3.2, 3.2, 4.8, 8.0, 9.7, 9.7, 8.0, 8.0, 6.4,
  8.0, 6.4, 4.8, 6.4, 6.4, 9.7, 6.4, 6.4, 3.2, 3.2, 3.2, 3.2, 6.4, 4.8, 4.8,
  6.4, 4.8, 4.8, 6.4, 4.8, 4.8, 4.8, 4.8, 3.2, 3.2, 3.2, 3.2, 3.2, 1.6, 3.2,
  3.2, 4.8, 6.4, 8.0, 6.4, 3.2, 1.6, 1.6, 1.6, 0.0, 3.2,
];
const x2 = [
  4.8, 3.2, 1.6, 3.2, 4.8, 4.8, 4.8, 4.8, 8.0, 6.4, 6.4, 6.4, 6.4, 8.0, 9.7,
  8.0, 8.0, 9.7, 8.0, 6.4, 4.8, 3.2, 4.8, 4.8, 4.8, 3.2, 4.8, 1.6, 1.6, 3.2,
  1.6, 1.6, 0.0, 3.2, 6.4, 4.8, 1.6, 1.6, 1.6, 1.6, 0.0, 3.2, 0.0, 1.6, 1.6,
  1.6, 4.8, 3.2, 3.2, 6.4, 6.4, 6.4, 6.4, 6.4, 8.0, 9.7, 8.0, 8.0, 11.3, 9.7,
  9.7, 11.3, 11.3, 11.3, 9.7, 9.7, 9.7, 8.0, 8.0, 6.4, 9.7, 8.0, 6.4, 6.4, 6.4,
  6.4, 6.4, 3.2, 3.2, 4.8, 3.2, 3.2, 3.2, 3.2, 3.2, 1.6, 3.2, 3.2, 3.2, 3.2,
  4.8, 4.8, 3.2, 3.2, 4.8, 4.8, 6.4, 4.8, 8.0, 9.7, 11.3, 8.0, 8.0, 9.7, 11.3,
  11.3, 11.3, 11.3, 12.9, 11.3, 9.7, 6.4, 9.7, 9.7, 6.4, 6.4, 6.4, 4.8, 4.8,
  6.4, 9.7, 4.8, 6.4, 4.8, 4.8, 3.2, 11.3, 16.1, 17.7, 9.7, 12.9, 6.4, 8.0, 1.6,
  1.6, 1.6, 1.6, 1.6, 1.6, 1.6, 1.6, 3.2, 1.6, 1.6, 1.6, 1.6, 1.6, 1.6, 1.6,
  1.6, 3.2, 3.2, 1.6, 1.6, 1.6, 1.6, 0.0, 0.0, 3.2, 1.6, 0.0, 1.6, 3.2, 1.6,
  1.6, 3.2, 1.6, 3.2, 1.6, 1.6, 3.2, 3.2, 3.2, 3.2, 1.6, 3.2, 1.6, 1.6, 1.6,
  3.2, 3.2, 6.4, 1.6, 1.6, 1.6, 1.6, 3.2, 6.4, 6.4, 8.0, 6.4, 6.4, 3.2, 1.6,
  1.6, 1.6, 3.2, 4.8, 3.2, 3.2, 4.8, 4.8, 6.4, 4.8, 4.8, 4.8, 6.4, 6.4, 6.4,
  4.8, 9.7, 8.0, 11.3, 9.7, 8.0, 6.4, 8.0, 11.3, 9.7, 11.3, 8.0, 9.7, 9.7, 4.8,
  8.0, 6.4, 6.4, 8.0, 9.7, 9.7, 8.0, 8.0, 8.0, 4.8, 4.8, 8.0, 8.0, 8.0, 8.0,
  8.0, 4.8, 4.8, 8.0, 6.4, 6.4, 4.8, 4.8, 6.4, 4.8, 6.4, 8.0, 4.8, 4.8, 3.2,
  6.4, 4.8, 9.7, 14.5, 9.7, 14.5, 12.9, 16.1, 17.7, 17.7, 17.7, 19.3, 20.9,
  20.9, 19.3, 17.7, 17.7, 14.5, 12.9, 9.7, 8.0, 4.8, 6.4, 8.0, 6.4, 8.0, 8.0,
  6.4, 6.4, 6.4, 8.0, 8.0, 9.7, 8.0, 8.0, 6.4, 8.0, 8.0, 8.0, 6.4, 6.4, 4.8,
  4.8, 6.4, 8.0, 6.4, 4.8, 4.8, 4.8, 4.8, 4.8, 4.8, 6.4, 6.4, 14.5, 14.5, 11.3,
  9.7, 8.0, 8.0, 6.4, 6.4, 6.4, 4.8, 4.8, 4.8, 3.2, 3.2, 3.2, 3.2, 4.8, 3.2,
  3.2, 3.2, 1.6, 4.8, 4.8, 6.4, 6.4, 6.4, 8.0, 8.0, 6.4, 6.4, 4.8, 4.8, 6.4,
  4.8, 4.8, 4.8, 6.4, 6.4, 6.4, 6.4, 6.4, 4.8, 6.4, 4.8, 4.8, 4.8, 3.2, 3.2,
  3.2, 3.2, 3.2, 8.0, 9.7, 14.5, 11.3, 9.7, 8.0, 8.0, 6.4, 6.4, 3.2, 1.6, 1.6,
  1.6, 1.6, 1.6, 1.6, 1.6, 1.6, 3.2, 1.6, 3.2, 3.2, 4.8, 3.2, 3.2, 3.2, 6.4,
  4.8, 4.8, 6.4, 6.4, 6.4, 8.0, 6.4, 6.4, 8.0, 8.0, 6.4, 6.4, 4.8, 4.8, 3.2,
  3.2, 4.8, 6.4, 4.8, 3.2, 3.2, 3.2, 3.2, 3.2, 3.2, 3.2, 3.2, 3.2, 3.2, 6.4,
  6.4, 4.8, 3.2, 3.2, 3.2, 3.2, 1.6, 1.6, 1.6, 1.6, 3.2, 6.4, 8.0, 9.7, 6.4,
  1.6, 1.6, 6.4, 4.8, 1.6, 3.2, 6.4, 6.4, 4.8, 6.4, 4.8, 4.8, 3.2, 3.2, 4.8,
  3.2, 3.2, 1.6, 1.6, 1.6, 1.6, 1.6, 3.2, 1.6, 1.6, 1.6, 1.6, 3.2, 4.8, 4.8,
  4.8, 6.4, 6.4, 3.2, 3.2, 3.2, 1.6, 1.6, 1.6, 1.6, 6.4, 6.4, 4.8, 4.8, 6.4,
  8.0, 6.4, 6.4, 8.0, 6.4, 3.2, 1.6, 6.4, 4.8, 4.8, 6.4, 6.4, 6.4, 8.0, 4.8,
  1.6, 1.6, 1.6, 1.6, 1.6, 3.2, 1.6, 1.6, 1.6, 3.2, 3.2, 3.2, 3.2, 3.2, 4.8,
  3.2, 4.8, 3.2, 3.2, 3.2, 3.2, 1.6, 0.0, 0.0, 1.6, 4.8, 4.8, 1.6, 8.0, 8.0,
  8.0, 8.0, 6.4, 6.4, 8.0, 4.8, 4.8, 1.6, 1.6, 1.6, 1.6, 1.6, 1.6, 4.8, 1.6,
  3.2, 3.2, 3.2, 3.2, 4.8, 8.0, 6.4, 4.8, 3.2, 4.8, 3.2, 3.2, 4.8, 4.8, 6.4,
  4.8, 4.8, 6.4, 6.4, 3.2, 4.8, 1.6, 1.6, 1.6, 3.2, 4.8, 4.8, 4.8, 4.8, 4.8,
  3.2, 4.8, 3.2, 3.2, 4.8, 3.2, 4.8, 6.4, 6.4, 6.4, 4.8, 3.2, 3.2, 1.6, 1.6,
  1.6, 1.6, 3.2, 4.8, 4.8, 4.8, 6.4, 6.4, 4.8, 3.2, 4.8, 4.8, 3.2, 4.8, 4.8,
  6.4, 4.8, 3.2, 3.2, 4.8, 3.2, 4.8, 3.2, 1.6, 3.2, 1.6, 1.6, 1.6, 4.8, 4.8,
  3.2, 6.4, 4.8, 4.8, 8.0, 3.2, 1.6, 3.2, 3.2, 1.6, 1.6, 3.2, 1.6, 1.6, 3.2,
  1.6, 3.2, 4.8, 4.8, 4.8, 3.2, 3.2, 4.8, 6.4, 4.8, 4.8, 6.4, 4.8, 4.8, 3.2,
  4.8, 6.4, 4.8, 4.8, 3.2, 3.2, 4.8, 3.2, 4.8, 4.8, 4.8, 6.4, 4.8, 1.6, 0.0,
  0.0, 0.0, 1.6, 0.0, 1.6, 1.6, 1.6, 3.2, 3.2, 1.6, 3.2, 3.2, 1.6, 1.6, 3.2,
  4.8, 4.8, 4.8, 4.8, 6.4, 9.7, 11.3, 11.3, 11.3, 9.7, 9.7, 11.3, 6.4, 4.8, 3.2,
  3.2, 4.8, 6.4, 8.0, 11.3, 8.0, 8.0, 6.4, 8.0, 8.0, 8.0, 8.0, 12.9, 9.7, 11.3,
  9.7, 9.7, 6.4, 3.2, 3.2, 4.8, 3.2, 6.4, 6.4, 8.0, 8.0, 8.0, 6.4, 4.8, 6.4,
  4.8, 8.0, 9.7, 9.7, 11.3, 11.3, 11.3, 9.7, 8.0, 4.8, 4.8, 3.2, 4.8, 6.4, 8.0,
  6.4, 6.4, 6.4, 6.4, 4.8, 6.4, 11.3, 9.7, 12.9, 16.1, 16.1, 14.5, 14.5, 14.5,
  14.5, 9.7, 12.9, 12.9, 11.3, 9.7, 6.4, 6.4, 4.8, 4.8, 8.0, 8.0, 8.0, 4.8, 6.4,
  6.4, 4.8, 6.4, 6.4, 6.4, 6.4, 8.0, 6.4, 4.8, 4.8, 6.4, 8.0, 8.0, 9.7, 8.0,
  6.4, 6.4, 6.4, 9.7, 8.0, 8.0, 6.4, 6.4, 3.2, 3.2, 6.4, 4.8, 16.1, 17.7, 14.5,
  12.9, 11.3, 12.9, 9.7, 8.0, 9.7, 8.0, 12.9, 12.9, 4.8, 4.8, 4.8, 6.4, 4.8,
  8.0, 12.9, 9.7, 9.7, 8.0, 4.8, 6.4, 6.4, 6.4, 4.8, 6.4, 6.4, 8.0, 11.3, 9.7,
  6.4, 8.0, 9.7, 9.7, 6.4, 9.7, 9.7, 6.4, 6.4, 6.4, 4.8, 3.2, 3.2, 3.2, 6.4,
  6.4, 9.7, 11.3, 9.7, 11.3, 9.7, 11.3, 11.3, 8.0, 6.4, 8.0, 8.0, 4.8, 3.2, 4.8,
  4.8, 4.8, 4.8, 6.4, 6.4, 6.4, 4.8, 4.8, 4.8, 4.8, 4.8, 8.0, 6.4, 6.4, 6.4,
  6.4, 6.4, 4.8, 4.8, 4.8, 4.8, 6.4, 8.0, 6.4, 6.4, 8.0, 6.4, 4.8, 3.2, 3.2,
  3.2, 4.8, 6.4, 4.8, 4.8, 3.2, 3.2, 3.2, 3.2, 3.2, 3.2, 4.8, 6.4, 4.8, 3.2,
  3.2, 1.6, 1.6, 1.6, 4.8, 4.8, 3.2, 3.2, 3.2, 1.6, 1.6, 3.2, 1.6, 3.2, 4.8,
  6.4, 6.4, 1.6, 4.8, 4.8, 8.0, 6.4, 6.4, 4.8, 4.8, 6.4, 8.0, 6.4, 4.8, 4.8,
  4.8, 4.8, 3.2, 3.2, 4.8, 3.2, 4.8, 4.8, 4.8, 4.8, 4.8, 6.4, 4.8, 4.8, 4.8,
  4.8, 4.8, 3.2, 3.2, 4.8, 3.2, 1.6, 3.2, 3.2, 3.2, 4.8, 3.2, 4.8, 3.2, 4.8,
  3.2, 4.8, 3.2, 3.2, 4.8, 3.2, 3.2, 6.4, 6.4, 6.4, 8.0, 6.4, 4.8, 3.2, 4.8,
  4.8, 4.8, 4.8, 4.8, 4.8, 4.8, 3.2, 3.2, 3.2, 3.2, 3.2, 3.2, 3.2, 4.8, 4.8,
  8.0, 6.4, 8.0, 4.8, 6.4, 6.4, 4.8, 3.2, 3.2, 3.2, 3.2, 4.8, 4.8, 4.8, 3.2,
  4.8, 4.8, 8.0, 8.0, 6.4, 4.8, 4.8, 6.4, 4.8, 6.4, 4.8, 6.4, 8.0, 6.4, 6.4,
  8.0, 8.0, 6.4, 6.4, 6.4, 6.4, 6.4, 4.8, 4.8, 3.2, 3.2, 4.8, 4.8, 4.8, 4.8,
  6.4, 8.0, 8.0, 8.0, 6.4, 4.8, 6.4, 6.4, 4.8, 4.8, 3.2, 3.2, 3.2, 4.8, 6.4,
  4.8, 6.4, 6.4, 4.8, 4.8, 4.8, 3.2, 3.2, 1.6, 1.6, 4.8, 3.2, 4.8, 6.4, 6.4,
  4.8, 4.8, 6.4, 6.4, 6.4, 6.4, 8.0, 6.4, 6.4, 6.4, 4.8, 3.2, 3.2, 3.2, 3.2,
  3.2, 1.6, 1.6, 1.6, 3.2, 4.8, 6.4, 9.7, 9.7, 9.7, 8.0, 9.7, 6.4, 6.4, 8.0,
  6.4, 4.8, 6.4, 6.4, 4.8, 3.2, 3.2, 3.2, 4.8, 6.4, 6.4, 6.4, 3.2, 3.2, 3.2,
  4.8, 6.4, 6.4, 6.4, 6.4, 6.4, 8.0, 8.0, 8.0, 8.0, 6.4, 6.4, 6.4, 4.8, 4.8,
  3.2, 3.2, 1.6, 1.6, 3.2, 3.2, 3.2, 3.2, 4.8, 4.8, 4.8, 4.8, 6.4, 4.8, 8.0,
  4.8, 4.8, 4.8, 4.8, 4.8, 3.2, 3.2, 4.8, 4.8, 1.6, 1.6, 3.2, 3.2, 3.2, 4.8,
  4.8, 3.2, 3.2, 4.8, 4.8, 6.4, 6.4, 6.4, 6.4, 6.4, 8.0, 6.4, 6.4, 6.4, 6.4,
  8.0, 8.0, 6.4, 6.4, 3.2, 4.8, 4.8, 6.4, 8.0, 8.0, 8.0, 9.7, 6.4, 6.4, 4.8,
  4.8, 4.8, 3.2, 3.2, 1.6, 0.0, 1.6, 1.6, 4.8, 1.6, 1.6, 3.2, 1.6, 1.6, 0.0,
  1.6, 0.0, 6.4, 6.4, 8.0, 8.0, 6.4, 3.2, 1.6, 1.6, 3.2, 3.2, 4.8, 4.8, 3.2,
  3.2, 3.2, 4.8, 6.4, 3.2, 1.6, 1.6, 1.6, 3.2, 1.6, 3.2, 3.2, 1.6, 3.2, 4.8,
  3.2, 4.8, 3.2, 3.2, 3.2, 4.8, 4.8, 3.2, 6.4, 8.0, 4.8, 4.8, 3.2, 1.6, 1.6,
  3.2, 4.8, 6.4, 8.0, 9.7, 9.7, 8.0, 8.0, 4.8, 1.6, 1.6, 3.2, 8.0, 8.0, 4.8,
  3.2, 3.2, 4.8, 6.4, 4.8, 8.0, 6.4, 4.8, 3.2, 3.2, 3.2, 1.6, 1.6, 4.8, 3.2,
  3.2, 3.2, 3.2, 3.2, 3.2, 3.2, 3.2, 3.2, 3.2, 4.8, 4.8, 4.8, 8.0, 6.4, 6.4,
  6.4, 6.4, 6.4, 8.0, 4.8, 8.0, 9.7, 8.0, 4.8, 4.8, 4.8, 4.8, 4.8, 6.4, 6.4,
  4.8, 3.2, 3.2, 4.8, 6.4, 4.8, 3.2, 3.2, 3.2, 1.6, 3.2, 3.2, 3.2, 3.2, 3.2,
  3.2, 4.8, 4.8, 4.8, 6.4, 4.8, 8.0, 6.4, 4.8, 6.4, 4.8, 6.4, 6.4, 4.8, 4.8,
  4.8, 3.2, 1.6, 1.6, 3.2, 3.2, 4.8, 3.2, 3.2, 3.2, 3.2, 3.2, 4.8, 4.8, 4.8,
  3.2, 1.6, 1.6, 1.6, 3.2, 3.2, 3.2, 4.8, 6.4, 4.8, 4.8, 3.2, 3.2, 3.2, 3.2,
  1.6, 1.6, 1.6, 3.2, 3.2, 3.2, 3.2, 3.2, 3.2, 3.2, 3.2, 3.2, 3.2, 3.2, 3.2,
  1.6, 1.6, 1.6, 1.6, 1.6, 1.6, 1.6, 0.0, 1.6, 1.6, 3.2, 3.2, 3.2, 4.8, 3.2,
  3.2, 3.2, 3.2, 1.6, 4.8, 3.2, 4.8, 4.8, 4.8, 4.8, 4.8, 6.4, 3.2, 3.2, 3.2,
  3.2, 3.2, 3.2, 3.2, 1.6, 3.2, 1.6, 1.6, 1.6, 3.2, 1.6, 1.6, 4.8, 4.8, 3.2,
  3.2, 3.2, 3.2, 1.6, 1.6, 1.6, 1.6, 1.6, 1.6, 1.6, 3.2, 3.2, 4.8, 4.8, 1.6,
  0.0, 1.6, 1.6, 6.4, 6.4,
];
btnPlot.addEventListener("click", function () {
  labels2 = [];
  if (myChart2) {
    myChart2.destroy();
  }
  slice = +input_number.value;
  let y = [];
  y = x2.filter((_, index) => {
    return index < slice;
  });
  console.log(y, y.length);
  let avg =
    y.reduce((acc, el) => {
      return acc + el;
    }, 0) / y.length;
  let avgarr = [];
  for (i = 0; i < slice; i++) {
    avgarr[i] = avg;
  }
  console.log(avg);
  for (i = 0; i < y.length; i++) {
    labels2.push(i);
  }
  data2 = {
    labels: labels2,
    datasets: [
      {
        label: "My First dataset",
        backgroundColor: "rgb(255, 99, 132)",
        borderColor: "rgb(255, 99, 132)",
        data: y,
      },
      {
        label: "My Second dataset",
        backgroundColor: "rgb(0, 0, 255)",
        borderColor: "rgb(0, 0, 255)",
        data: avgarr,
      },
    ],
  };
  config2 = {
    type: "line",
    data: data2,
    options: {},
  };
  myChart2 = new Chart(document.getElementById("secondChart"), config2);
});

for (i = 0; i < x2.length; i++) {
  labels.push(i);
}

const data = {
  labels: labels,
  datasets: [
    {
      label: "My First dataset",
      backgroundColor: "rgb(255, 99, 132)",
      borderColor: "rgb(255, 99, 132)",
      data: x,
    },
  ],
};

const config = {
  type: "line",
  data: data,
  options: {},
};

const myChart = new Chart(document.getElementById("mainChart"), config);
